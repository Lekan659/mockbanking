"""
Django settings for bipnet project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
import django_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'q7v=v8oz!u$l%e&&pt+k)e(9dgei(e7tzxq@7am8nn3%rg#u*z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #Custom App
    'bipnet_auth',
    'staff',
    'settings',
    'customer',
    'account_manager',
    'transaction_manager',

    #Third Party App
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django_hosts'
]

MIDDLEWARE = [
    'django_hosts.middleware.HostsRequestMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_hosts.middleware.HostsResponseMiddleware',
]

# This is the urlconf that will be used for any subdomain that is not
# listed in ``SUBDOMAIN_URLCONFS``, or if the HTTP ``Host`` header does not
# contain the correct domain
ROOT_URLCONF = 'bipnet.urls.root'

# Root Host Configuration for subdomain routing
ROOT_HOSTCONF = 'bipnet.hosts'

# Default url if no match was found
DEFAULT_HOST = 'root'

# A dictionary of urlconf module paths, keyed by their subdomain.
SUBDOMAIN_URLCONFS = {
    None: 'bipnet.urls.admin',  # no subdomain
    'www': 'bipnet.urls.admin',
    'api': 'bipnet.urls.api',
    'admin': 'bipnet.urls.admin'
}


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bipnet.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bipnet',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',           
        'PORT': '3306',
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lagos'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'bipnet_auth.AuthModel'

AUTHENTICATION_BACKENDS = ('bipnet_auth.authbackend.AuthBackend',)

#Token Expiration
EXPIRING_TOKEN_DURATION=timedelta(minutes=15)

#DJANGO REST FRAMEWORK CONFIG
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'bipnet_auth.token_authentication.TokenAuthentication',
        #'django_expiring_token.authentication.ExpiringTokenAuthentication',
        #'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', )
}

#CROSS ORIGIN RESOURCE SHARING CONFIG
CORS_ORIGIN_ALLOW_ALL = True

#ROWS PER PAGE.
ROWS_PER_PAGE = 15

#Paystack API
PAYSTACK_PUB_KEY = 'pk_test_7013e313c35605d767ffa54e51e8908f458cb23f'

PAYSTACK_SEC_KEY = "sk_test_cf3e12466318c8d233af247009f49feb11ef6ecf"

django_heroku.settings(locals())